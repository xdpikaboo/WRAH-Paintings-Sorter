<!--
Project directory structure:
  build.xml : this file
  .gitignore: git ignore files for Java (EECS 293 version).
              This is a hidden file, but do not ignore!
  src/ : source .java files

Generated directories
  build/ : .class files
  report/
    junit/index.html : JUnit report
    jacoco/index.html: JaCoCo report
  doc/ : JavaDoc

$ANT_HOME/lib must contain (see Ant-JUnit and JaCoCo installation guides):
  ant-junit4.jar
  ant-junit.jar
  hamcrest-core-1.3.jar
  junit-4.13.jar
  jacocoant.jar
-->

<!-- TODO: change the name to the name of the project given in the assignment (such as "count") -->
<project name="wps" xmlns:jacoco="antlib:org.jacoco.ant">
  <!--   Directory with source files -->
  <property name="src.dir" value="src"/>

  <!--   Directories with the class files -->
  <property name="bin.dir" value="build"/>

  <!--   Directories and files with the output -->
  <property name="output.dir" value="output"/>
  <property name="output.file" value="${output.dir}/output.txt"/>
  <property name="error.file" value="${output.dir}/error.txt"/>

  <!--   Directories and files with the reports on unit test and code coverage -->
  <property name="report.dir" value="report"/>
  <property name="junit.dir" value="${report.dir}/junit"/>
  <property name="jacoco.dir" value="${report.dir}/jacoco"/>
  <property name="jacoco.file" value="${jacoco.dir}/jacoco.exec"/>

  <!--   Directory for JavaDoc output -->
  <property name="doc.dir" value="doc"/>

  <!--   Class containing the main method: define ONLY IF your project has a main -->
  <!-- TODO: if this project specifies a main class, replace "HelloWorld" with that main class (otherwise, you can ignore this) -->
  <!-- <property name="main-class" value="${ant.project.name}.HelloWorld"/> -->

  <!--   Additional jar that may be needed for properly runnign junit -->
  <path id="hamcrest.classpath">
    <pathelement location="${ant.home}/lib/hamcrest-core-1.3.jar"/>
  </path>

  <!--   ant clean : remove generated files -->
  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${report.dir}"/>
    <delete dir="${doc.dir}"/>
    <delete dir="${output.dir}"/>
  </target>

  <!--   ant build : compile the src  -->
  <target name="build">
    <mkdir dir="${build.dir}"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true" includeAntRuntime="yes"/>
  </target>

  <!--   ant test : run unit tests -->
  <target name="test" depends="build">
    <mkdir dir="${report.dir}"/>
    <mkdir dir="${junit.dir}"/>
    <mkdir dir="${jacoco.dir}"/>
    <jacoco:coverage destfile="${jacoco.file}">
      <junit fork="yes" includeAntRuntime="yes" printsummary="withOutAndErr">
        <assertions><enable/></assertions>
        <formatter type="xml"/>
        <batchtest fork="yes" filtertrace="off" todir="${junit.dir}">
	  <fileset dir="${build.dir}" includes="**/*TestedTest.class"/>
        </batchtest>
        <classpath refid="hamcrest.classpath"/>
	<classpath path="${build.dir}"/>
      	<taskdef name="junit.jar" classpath="C:\Users\xdpik\Documents\apache-ant-1.10.11\lib"/>
      	<taskdef name="ant-junit.jar" classpath="C:\Users\xdpik\Documents\apache-ant-1.10.11\lib"/>
      </junit>
    </jacoco:coverage>
  </target>

 
</project>
